def fibonacci(n):
    # 기본 조건: n이 0 또는 1인 경우, 피보나치 수는 n 그 자체
    if n <= 1:
        return n
    
    # dp라는 리스트를 생성하여 피보나치 수열의 값을 저장할 공간 생성
    # 동적 프로그래밍 배열을 생성
    # 배열의 크기는 n+1로 설정하고, 각 원소는 0으로 초기화
    dp = [0] * (n + 1)

    # 첫 번째 피보나치 수는 1이므로 dp[1]에 1을 할당
    dp[1] = 1

    # 반복문을 통해 2부터 n까지의 피보나치 수를 계산
    for i in range(2, n + 1):

        # 현재 값은 이전 두 값의 합
        dp[i] = dp[i - 1] + dp[i - 2]

    # n번째 피보나치 수를 반환
    return dp[n]


n = 10

print(fibonacci(n))  # 결과: 55
